{"ast":null,"code":"import _classCallCheck from \"/home/e/repos/mern-sites/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/e/repos/mern-sites/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/e/repos/mern-sites/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/e/repos/mern-sites/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/e/repos/mern-sites/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/e/repos/mern-sites/portfolio/src/projects/StarsContainer.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nvar StarsContainer = /*#__PURE__*/function (_Component) {\n  _inherits(StarsContainer, _Component);\n\n  function StarsContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StarsContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StarsContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.updateCanvas = function () {\n      var canvas = document.getElementById('canvas');\n      var c = canvas.getContext('2d');\n      var innerWidth = window.innerWidth;\n      var innerHeight = window.innerHeight;\n      canvas.width = innerWidth;\n      canvas.height = innerHeight;\n      window.addEventListener('resize', function (event) {\n        canvas.width = innerWidth;\n        canvas.height = innerHeight;\n      });\n\n      var randomColor = function randomColor(colors) {\n        return colors[Math.floor(Math.random() * colors.length) + 1];\n      };\n\n      var randomIntFromRange = function randomIntFromRange(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n      }; // const distance = (x1, y1, x2, y2) => {\n      //   const xDist = x2 - x1;\n      //   const yDist = y2 - y1;\n      //   return Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n      // };\n      // Object Constructor\n\n\n      function Star(x, y, radius, color) {\n        this.x = x;\n        this.y = y;\n        this.radius = radius;\n        this.color = color;\n        this.gravity = 1;\n        this.friction = 0.8;\n        this.velocity = {\n          x: (Math.random() - 0.5) * 18,\n          y: 3\n        };\n      }\n\n      ;\n\n      Star.prototype.draw = function () {\n        c.beginPath();\n        c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n        c.fill();\n        c.closePath();\n      };\n\n      Star.prototype.update = function () {\n        this.draw(); // When star hits bottom of screen\n\n        if (this.y + this.radius + this.velocity.y > innerHeight) {\n          this.velocity.y = -this.velocity.y * this.friction;\n          this.shatter();\n        } else {\n          this.velocity.y += this.gravity;\n        }\n\n        ;\n\n        if (this.x + this.radius + this.velocity.x > canvas.width || this.x - this.radius <= 0) {\n          this.velocity.x = -this.velocity.x;\n          this.shatter();\n        }\n\n        this.x += this.velocity.x;\n        this.y += this.velocity.y;\n      };\n\n      Star.prototype.shatter = function () {\n        this.radius -= 3;\n\n        for (var i = 0; i < 18; i++) {\n          miniStars.push(new MiniStar(this.x, this.y, 2));\n        }\n\n        ;\n      }; // Mini stars created when star hits bottom/side of screen\n\n\n      function MiniStar(x, y, radius) {\n        Star.call(this, x, y, radius);\n        this.gravity = 0.1;\n        this.friction = 0.8;\n        this.velocity = {\n          x: randomIntFromRange(-5, 5),\n          y: randomIntFromRange(-15, 15)\n        }; // TTL = Time to live\n\n        this.ttl = 100;\n        this.opacity = 1;\n        this.color = randomColor(['red', \"rgb(231, 135, 62, \".concat(this.opacity, \")\"), \"rgb(31, 125, 247, \".concat(this.opacity, \")\"), \"rgb(219, 56, 50, \".concat(this.opacity, \")\"), \"rgb(73, 161, 101, \".concat(this.opacity, \")\")]);\n      }\n\n      ;\n\n      MiniStar.prototype.draw = function () {\n        c.beginPath();\n        c.fillStyle = this.color;\n        c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n        c.fill();\n        c.closePath();\n      };\n\n      MiniStar.prototype.update = function () {\n        this.draw(); // When star hits bottom of screen\n\n        if (this.y + this.radius + this.velocity.y > innerHeight) {\n          this.velocity.y = -this.velocity.y * this.friction;\n        } else {\n          this.velocity.y += this.gravity;\n        }\n\n        ;\n        this.x += this.velocity.x;\n        this.y += this.velocity.y;\n        this.ttl -= 1; // this.opacity -= 1 / this.ttl - 0.1;\n      };\n\n      var backgroundGradient = c.createLinearGradient(0, 0, 0, innerHeight);\n      backgroundGradient.addColorStop(0.9, 'rgb(26, 25, 25)');\n      backgroundGradient.addColorStop(1, 'rgb(26, 25, 25)');\n      var stars;\n      var miniStars;\n      var ticker = 0;\n      var randomSpawnRate = 35; // const groundHeight = 80\n\n      var init = function init() {\n        stars = [];\n        miniStars = [];\n      };\n\n      var animate = function animate() {\n        requestAnimationFrame(animate);\n        c.fillStyle = backgroundGradient;\n        c.fillRect(0, 0, innerWidth, innerHeight);\n        stars.forEach(function (star, index) {\n          star.update();\n\n          if (star.radius <= 0) {\n            stars.splice(index, 1);\n          }\n\n          ;\n        }); // const groundHeight = 30px;\n        // c.fillStyle = 'rgb(26, 25, 25)'\n        // c.fillRect(0, innerHeight - groundHeight, innerWidth, groundHeight)\n\n        miniStars.forEach(function (miniStar, index) {\n          miniStar.update();\n\n          if (miniStar.ttl === 0) {\n            miniStars.splice(index, 1);\n          }\n\n          ;\n        });\n        ticker++;\n\n        if (ticker % randomSpawnRate <= 0) {\n          var radius = 12;\n          var x = Math.max(radius, Math.random() * innerWidth - radius);\n          stars.push(new Star(x, -100, radius, 'rgb(255, 25, 25, 0)'));\n          randomSpawnRate = randomIntFromRange(5, 20);\n        }\n\n        ;\n      };\n\n      init();\n      animate();\n    };\n\n    return _this;\n  }\n\n  _createClass(StarsContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateCanvas();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"projects-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"michael-pic-projects michael-project-pictures\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 28\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"projects-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"material-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-angle-double-left arrows\",\n        onClick: this.props.toggleLeft,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flash-stack-container middle-container\",\n        onClick: function onClick() {\n          return window.open(\"http://fatstacks.surge.sh\", \"_blank\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"project-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 19\n        }\n      }, \"Fat Stacks\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"project-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 19\n        }\n      }, \"Front end application displaying stats of UFC fighters\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"languages-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }\n      }, \"Languages: JavaScript, HTML5, CSS3\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }\n      }, \"Framework: Express\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }\n      }, \"Libraries: React.js, Redux\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }\n      }, \"Environment: Node.js\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }\n      }, \"Database: ufc-fighters-api\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }\n      }, \"Additional: FontAwesome, JQuery, Surge, Git, GitHub, ajax\"))), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-angle-double-right arrows\",\n        onClick: this.props.toggleRight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"canvas\", {\n        id: \"canvas\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return StarsContainer;\n}(Component);\n\n;\nexport default StarsContainer;","map":{"version":3,"sources":["/home/e/repos/mern-sites/portfolio/src/projects/StarsContainer.js"],"names":["React","Component","Link","StarsContainer","updateCanvas","canvas","document","getElementById","c","getContext","innerWidth","window","innerHeight","width","height","addEventListener","event","randomColor","colors","Math","floor","random","length","randomIntFromRange","min","max","Star","x","y","radius","color","gravity","friction","velocity","prototype","draw","beginPath","arc","PI","fill","closePath","update","shatter","i","miniStars","push","MiniStar","call","ttl","opacity","fillStyle","backgroundGradient","createLinearGradient","addColorStop","stars","ticker","randomSpawnRate","init","animate","requestAnimationFrame","fillRect","forEach","star","index","splice","miniStar","props","toggleLeft","open","toggleRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\n\nclass StarsContainer extends Component {\n\n  componentDidMount() {\n    this.updateCanvas();\n  };\n\n  updateCanvas = () => {\n    const canvas = document.getElementById('canvas');\n    const c = canvas.getContext('2d');\n    const innerWidth = window.innerWidth;\n    const innerHeight = window.innerHeight;\n    canvas.width = innerWidth;\n    canvas.height = innerHeight;\n\n\n    window.addEventListener('resize', event => {\n      canvas.width = innerWidth;\n      canvas.height = innerHeight;\n    });\n\n    const randomColor = (colors) => {\n      return colors[Math.floor(Math.random() * colors.length) + 1];\n    }\n\n    const randomIntFromRange = (min, max) => {\n      return Math.floor(Math.random() * (max - min + 1) + min);\n    };\n\n    // const distance = (x1, y1, x2, y2) => {\n    //   const xDist = x2 - x1;\n    //   const yDist = y2 - y1;\n    //   return Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n    // };\n\n    // Object Constructor\n    function Star(x, y, radius, color) {\n      this.x = x;\n      this.y = y;\n      this.radius = radius;\n      this.color = color;\n      this.gravity = 1;\n      this.friction = 0.8;\n      this.velocity = {\n        x: (Math.random() - 0.5) * 18,\n        y: 3\n      };\n    };\n\n    Star.prototype.draw = function() {\n      c.beginPath();\n      c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n      c.fill();\n      c.closePath();\n    };\n\n    Star.prototype.update = function() {\n      this.draw();\n\n      // When star hits bottom of screen\n      if (this.y + this.radius + this.velocity.y > innerHeight) {\n        this.velocity.y = -this.velocity.y * this.friction;\n        this.shatter();\n      } else {\n        this.velocity.y += this.gravity;\n      };\n\n      if (this.x + this.radius + this.velocity.x > canvas.width || this.x - this.radius <= 0) {\n        this.velocity.x = -this.velocity.x\n        this.shatter()\n      }\n\n      this.x += this.velocity.x\n      this.y += this.velocity.y;\n    };\n\n\n    Star.prototype.shatter = function() {\n      this.radius -= 3;\n      for (let i = 0; i < 18; i++) {\n        miniStars.push(new MiniStar(this.x, this.y, 2));\n      };\n    };\n\n    // Mini stars created when star hits bottom/side of screen\n    function MiniStar(x, y, radius) {\n      Star.call(this, x, y, radius);\n      this.gravity = 0.1;\n      this.friction = 0.8;\n      this.velocity = {\n        x: randomIntFromRange(-5, 5),\n        y: randomIntFromRange(-15, 15)\n      };\n      // TTL = Time to live\n      this.ttl = 100;\n      this.opacity = 1;\n      this.color = randomColor(['red',`rgb(231, 135, 62, ${this.opacity})`, `rgb(31, 125, 247, ${this.opacity})`, `rgb(219, 56, 50, ${this.opacity})`, `rgb(73, 161, 101, ${this.opacity})`]);\n    };\n\n    MiniStar.prototype.draw = function() {\n      c.beginPath();\n      c.fillStyle = this.color;\n      c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n      c.fill();\n      c.closePath();\n    };\n\n    MiniStar.prototype.update = function() {\n      this.draw();\n\n      // When star hits bottom of screen\n      if (this.y + this.radius + this.velocity.y > innerHeight) {\n        this.velocity.y = -this.velocity.y * this.friction;\n      } else {\n        this.velocity.y += this.gravity;\n      };\n      this.x += this.velocity.x;\n      this.y += this.velocity.y;\n      this.ttl -= 1;\n      // this.opacity -= 1 / this.ttl - 0.1;\n    };\n\n\n    const backgroundGradient = c.createLinearGradient(0, 0, 0, innerHeight);\n    backgroundGradient.addColorStop(0.9, 'rgb(26, 25, 25)');\n    backgroundGradient.addColorStop(1, 'rgb(26, 25, 25)');\n    let stars;\n    let miniStars;\n    let ticker = 0;\n    let randomSpawnRate = 35\n    // const groundHeight = 80\n\n    const init = () => {\n      stars = [];\n      miniStars = [];\n    };\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      c.fillStyle = backgroundGradient\n      c.fillRect(0, 0, innerWidth, innerHeight);\n\n      stars.forEach((star, index) => {\n        star.update();\n        if (star.radius <= 0) {\n          stars.splice(index, 1);\n        };\n      });\n\n      // const groundHeight = 30px;\n\n      // c.fillStyle = 'rgb(26, 25, 25)'\n\n      // c.fillRect(0, innerHeight - groundHeight, innerWidth, groundHeight)\n\n      miniStars.forEach((miniStar, index) => {\n        miniStar.update();\n        if (miniStar.ttl === 0) {\n          miniStars.splice(index, 1);\n        };\n      });\n      ticker++;\n\n      if (ticker % randomSpawnRate <= 0) {\n        const radius = 12\n        const x = Math.max(radius, Math.random() * innerWidth - radius);\n        stars.push(new Star(x, -100, radius, 'rgb(255, 25, 25, 0)'));\n        randomSpawnRate = randomIntFromRange(5, 20);\n      };\n\n    };\n    init();\n    animate();\n  };\n\n\n  render() {\n    return (\n        <div className = \"projects-container\">\n            <Link to = '/'><div className = \"michael-pic-projects michael-project-pictures\"></div></Link>\n            <div className = \"projects-wrap\">\n              <div className = \"material-container\">\n                <i className = \"fas fa-angle-double-left arrows\" onClick = {this.props.toggleLeft}></i>\n                <div className = \"flash-stack-container middle-container\" onClick = { () => window.open(\"http://fatstacks.surge.sh\", \"_blank\")}>\n                  <h1 className = \"project-title\">Fat Stacks</h1>\n                  <p className = \"project-description\">Front end application displaying stats of UFC fighters</p>\n                  <ul className = \"languages-container\">\n                    <li>Languages: JavaScript, HTML5, CSS3</li>\n                    <li>Framework: Express</li>\n                    <li>Libraries: React.js, Redux</li>\n                    <li>Environment: Node.js</li>\n                    <li>Database: ufc-fighters-api</li>\n                    <li>Additional: FontAwesome, JQuery, Surge, Git, GitHub, ajax</li>\n                  </ul>\n                </div>\n                <i className = \"fas fa-angle-double-right arrows\" onClick = {this.props.toggleRight}></i>\n              </div>\n            </div>\n            <canvas id = 'canvas'></canvas>\n        </div>\n    )\n  };\n};\n\nexport default StarsContainer;"]},"metadata":{},"sourceType":"module"}